{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","prototype","id","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6SAIA,SAASA,EAAT,GAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAIL,UAAU,eAAd,SACKI,GAD6BC,QAK1C,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,eAMhBZ,EAAMa,UAAY,CACdC,GAAIC,IAAUC,OAAOC,WACrBhB,KAAMc,IAAUC,OAAOC,WACvBf,MAAOa,IAAUG,OAAOD,WACxBd,QAASY,IAAUG,OAAOD,WAC1Bb,OAAQW,IAAUG,OAAOD,WACzBZ,OAAQU,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjCjB,QCqBAoB,G,kNAhDXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAEZC,U,sBAAY,8BAAAC,EAAA,sEAOFC,IAAMC,IACZ,4DARQ,gBAIAJ,EAJA,EAERK,KACIA,KACIL,OAMZ,EAAKM,SAAS,CAACN,OAAQA,EAAQD,WAAW,IAV9B,2C,kEAaRQ,KAAKN,c,+BAGC,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACC,yBAASjB,UAAU,YAAnB,SACIgB,EACI,qBAAKhB,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGR,qBAAKA,UAAU,SAAf,SACKiB,EAAOd,KAAI,SAAAsB,GAAK,OACb,cAAC,EAAD,CAEAjB,GAAIiB,EAAMjB,GACVb,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,QANT0B,EAAMjB,e,GAjCbmB,IAAMC,YCAxBC,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,eAAe,a","file":"static/js/main.9928bad2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li className=\"genres_genre\" key={index}>\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.prototype = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        isLoading: true,\r\n        movies: []\r\n    };\r\n    getMovies = async () => {\r\n    const {\r\n        data: {\r\n            data: {\r\n                movies\r\n            }\r\n        }\r\n    } = await axios.get(\r\n        \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    this.setState({movies: movies, isLoading: false});\r\n}\r\n    componentDidMount() {\r\n        this.getMovies();\r\n    }\r\n\r\n    render() {\r\n       const {isLoading, movies} = this.state;\r\n       return (\r\n        <section className=\"container\">\r\n           {isLoading ? (\r\n                <div className=\"loader\">\r\n                    <span className=\"loader_text\">loading...</span>\r\n                </div>\r\n           ) : (\r\n            <div className=\"movies\">\r\n                {movies.map(movie => (\r\n                    <Movie \r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    year={movie.year}\r\n                    title={movie.title}\r\n                    summary={movie.summary}\r\n                    poster={movie.medium_cover_image} \r\n                    genres={movie.genres}\r\n                    />\r\n                ))}\r\n            </div>\r\n           )}\r\n        </section>\r\n       );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n/* #4.0\r\naxios는 땅콩(fetch)을 둘러싼 초콜릿 같은 존재\r\naxios로부터의 데이터를 잡을 필요가 있음.\r\naxios.get 은 항상 빠르지 않고 느림. 그래서\r\ncomponentDidMount 함수가 끝날때까지 약간 시간이 걸릴 수 있다고 말해야해.\r\n그리고 그걸 기다려야 하지!\r\n그를 위해 async 와 await를 사용. \r\nasync 는 이 함수가 비동기라고 한 거야. 이 말은 \"너는 이걸 기다려야 해\" 인거고,\r\nawait 은 함수 내부에서 \"내가 뭘 기다리길 바래? axios?\" 라는 거지.\r\nasync와 await는 쌍이야. 같이 써야하는 거지.\r\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import Potato from \"./Potato\";\n\nReactDOM.render(\n    <App />, document.getElementById('potato')\n);\n/* #2.0\n<App /> 은 Component, HTML를 반환하는 함수.\nreact는 component를 사용해서 HTML처럼 작성하려는 경우 필요\n이러한 javascript와 HTML 사이의 조합을 jsx라 부름.\njsx는 오직 react에서만 사용하는 것임.딴데서 사용 x\n즉 jsx는 javascript안의 HTML이야. Component를 만들고 어떻게 사용하는지에 대한 것\n\n그리고 기억해야할 것은 react application은 \n한번에 하나의 component만 rendering 할수 있다는 것.\n그래서 Potato를 여기서 import 하는 것이 아닌 App안에서 하는것.\n여러 컴포넌트를 App내부에 쓰는거야 잊지마!\n*/\n"],"sourceRoot":""}